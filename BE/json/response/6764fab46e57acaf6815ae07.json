{
  "_id": "6764fab46e57acaf6815ae07",
  "title": "Get list tweet by created_by (all status and type)",
  "outputEntity": [
    "6747ef07c47463d88f8c5ab1"
  ],
  "queryAdvance": "[\n  {\n    \"$addFields\": {\n      \"id\": {\n        \"$toString\": \"$_id\"\n      }\n    }\n  },\n  {\n    \"$match\": {\n      \"tenant_id\": \"@header:x-tenant-id\",\n      \"status\": \"active\"\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-group-member\",\n      \"localField\": \"id\",\n      \"foreignField\": \"social_group\",\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"user\": \"@jwt:user.id\",\n            \"status\": \"joined\"\n          }\n        }\n      ],\n      \"as\": \"group_members\"\n    }\n  },\n  {\n    \"$match\": {\n      \"group_members\": {\n        \"$ne\": []\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-tweet\",\n      \"let\": {\n        \"groupId\": {\n          \"$toString\": \"$_id\"\n        }\n      },\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"tenant_id\": \"@header:x-tenant-id\",\n            \"$expr\": {\n              \"$in\": [\n                \"$$groupId\",\n                {\n                  \"$cond\": {\n                    \"if\": {\n                      \"$isArray\": \"$social_group\"\n                    },\n                    \"then\": \"$social_group\",\n                    \"else\": [\"$social_group\"]\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ],\n      \"as\": \"tweet\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"contents\": {\n        \"$concatArrays\": [\"$tweet\"]\n      }\n    }\n  },\n  {\n    \"$unwind\": \"$contents\"\n  },\n  {\n    \"$replaceRoot\": {\n      \"newRoot\": \"$contents\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"categories\": {\n        \"$map\": {\n          \"input\": \"$categories\",\n          \"as\": \"sg\",\n          \"in\": {\n            \"$toObjectId\": \"$$sg\"\n          }\n        }\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-group-category\",\n      \"localField\": \"categories\",\n      \"foreignField\": \"_id\",\n      \"as\": \"categories\"\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"user-tenant-profile\",\n      \"localField\": \"created_by\",\n      \"foreignField\": \"user\",\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"tenant_id\": \"@header:x-tenant-id\"\n          }\n        },\n        {\n          \"$addFields\": {\n            \"full_name\": {\n              \"$concat\": [\"$profile.last_name\", \" \", \"$profile.first_name\"]\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": \"$user\",\n            \"full_name\": 1,\n            \"featured_image\": \"$profile.social.featured_image\"\n          }\n        }\n      ],\n      \"as\": \"user\"\n    }\n  },\n  {\n    \"$match\": {\n      \"created_by\": \"@param:user_id\",\n      \"$expr\": {\n        \"$and\": [\n          {\n            \"$cond\": {\n              \"if\": {\n                \"$ne\": [\"@param:status[]\", null]\n              },\n              \"then\": {\n                \"$or\": [\n                  {\n                    \"$in\": [\"$status\", [\"@param:status[]\"]]\n                  },\n                  {\n                    \"$in\": [\"$status\", [[\"@param:status[]\"]]]\n                  }\n                ]\n              },\n              \"else\": true\n            }\n          },\n          {\n            \"$cond\": {\n              \"if\": {\n                \"$ne\": [\"@param:type[]\", null]\n              },\n              \"then\": {\n                \"$in\": [\"$type\", \"@param:type[]\"]\n              },\n              \"else\": true\n            }\n          },\n          {\n            \"$cond\": {\n              \"if\": {\n                \"$ne\": [\"@param:tag[]\", null]\n              },\n              \"then\": {\n                \"$in\": [\"$tag\", \"@param:tag[]\"]\n              },\n              \"else\": true\n            }\n          }\n        ]\n      }\n    }\n  },\n  {\n    \"$addFields\": {\n      \"social_group_object\": {\n        \"$map\": {\n          \"input\": \"$social_group\",\n          \"as\": \"sg\",\n          \"in\": {\n            \"$toObjectId\": \"$$sg\"\n          }\n        }\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-group\",\n      \"localField\": \"social_group_object\",\n      \"foreignField\": \"_id\",\n      \"pipeline\": [\n        {\n          \"$lookup\": {\n            \"from\": \"media\",\n            \"let\": {\n              \"featuredImageId\": {\n                \"$arrayElemAt\": [\"$cover\", 0]\n              }\n            },\n            \"pipeline\": [\n              {\n                \"$match\": {\n                  \"$expr\": {\n                    \"$eq\": [\n                      \"$_id\",\n                      {\n                        \"$toObjectId\": \"$$featuredImageId\"\n                      }\n                    ]\n                  }\n                }\n              },\n              {\n                \"$addFields\": {\n                  \"path\": {\n                    \"$concat\": [\n                      {\n                        \"$cond\": [\n                          {\n                            \"$eq\": [\"minio\", \"@app_settings:storage_type\"]\n                          },\n                          \"@app_settings:minio.public\",\n                          \"@app_settings:doSpace.public\"\n                        ]\n                      },\n                      \"/\",\n                      \"$disk\",\n                      \"/\",\n                      \"$filename\"\n                    ]\n                  }\n                }\n              }\n            ],\n            \"as\": \"cover\"\n          }\n        }\n      ],\n      \"as\": \"group\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"_id\": {\n        \"$toString\": \"$_id\"\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-entity-like\",\n      \"let\": {\n        \"currentId\": \"$_id\",\n        \"userId\": \"@jwt:user.id\"\n      },\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"$expr\": {\n              \"$and\": [\n                {\n                  \"$eq\": [\"$entity_id\", \"$$currentId\"]\n                },\n                {\n                  \"$eq\": [\"$created_by\", \"$$userId\"]\n                }\n              ]\n            }\n          }\n        }\n      ],\n      \"as\": \"liked_info\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"liked\": {\n        \"$cond\": {\n          \"if\": {\n            \"$gt\": [\n              {\n                \"$size\": \"$liked_info\"\n              },\n              0\n            ]\n          },\n          \"then\": true,\n          \"else\": false\n        }\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-entity-like\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"entity_id\",\n      \"as\": \"liked_details\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"like_count\": {\n        \"$size\": \"$liked_details\"\n      }\n    }\n  },\n  {\n    \"$addFields\": {\n      \"joined\": true\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-tweet-saved\",\n      \"let\": {\n        \"currentId\": \"$_id\",\n        \"userId\": \"@jwt:user.id\"\n      },\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"$expr\": {\n              \"$and\": [\n                {\n                  \"$eq\": [\"$tweet_id\", \"$$currentId\"]\n                },\n                {\n                  \"$eq\": [\"$created_by\", \"$$userId\"]\n                }\n              ]\n            }\n          }\n        }\n      ],\n      \"as\": \"saved_info\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"saved\": {\n        \"$cond\": {\n          \"if\": {\n            \"$gt\": [\n              {\n                \"$size\": \"$saved_info\"\n              },\n              0\n            ]\n          },\n          \"then\": true,\n          \"else\": false\n        }\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-tweet-comment\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"tweet\",\n      \"as\": \"comment\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"comment_count\": {\n        \"$size\": \"$comment\"\n      }\n    }\n  },\n  {\n    \"$project\": {\n      \"comment\": 0\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-group-member\",\n      \"localField\": \"social_group\",\n      \"foreignField\": \"social_group\",\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"user\": \"@jwt:user.id\",\n            \"tenant_id\": \"@header:x-tenant-id\"\n          }\n        }\n      ],\n      \"as\": \"member_status\"\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"media\",\n      \"let\": {\n        \"featuredImageId\": {\n          \"$arrayElemAt\": [\"$featured_image\", 0]\n        }\n      },\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"$expr\": {\n              \"$eq\": [\n                \"$_id\",\n                {\n                  \"$toObjectId\": \"$$featuredImageId\"\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"$addFields\": {\n            \"path\": {\n              \"$concat\": [\n                {\n                  \"$cond\": [\n                    {\n                      \"$eq\": [\"minio\", \"@app_settings:storage_type\"]\n                    },\n                    \"@app_settings:minio.public\",\n                    \"@app_settings:doSpace.public\"\n                  ]\n                },\n                \"/\",\n                \"$disk\",\n                \"/\",\n                \"$filename\"\n              ]\n            }\n          }\n        }\n      ],\n      \"as\": \"featured_image\"\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-user-vote-result\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"tweet_id\",\n      \"pipeline\": [\n        {\n          \"$lookup\": {\n            \"from\": \"user-tenant-profile\",\n            \"localField\":\"created_by\",\n            \"foreignField\":\"user\",\n            \"pipeline\": [\n            {\n              \"$match\": {\n                \"tenant_id\":\"@header:x-tenant-id\"\n              }\n            },\n              {\n                \"$addFields\": {\n                  \"full_name\": {\n                    \"$concat\": [\n                      {\n                        \"$ifNull\": [\"$profile.last_name\", \"\"]\n                      },\n                      {\n                        \"$cond\": {\n                          \"if\": {\n                            \"$and\": [\n                              {\n                                \"$ne\": [\"$profile.last_name\", null]\n                              },\n                              {\n                                \"$ne\": [\"$profile.last_name\", \"\"]\n                              },\n                              {\n                                \"$ne\": [\"$profile.first_name\", null]\n                              },\n                              {\n                                \"$ne\": [\"$profile.first_name\", \"\"]\n                              }\n                            ]\n                          },\n                          \"then\": \" \",\n                          \"else\": \"\"\n                        }\n                      },\n                      {\n                        \"$ifNull\": [\"$profile.first_name\", \"\"]\n                      }\n                    ]\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"_id\": \"$user\",\n                  \"full_name\": 1,\n                  \"featured_image\": \"$profile.social.featured_image\"\n                }\n              }\n            ],\n            \"as\": \"user\"\n          }\n        }\n      ],\n      \"as\": \"vote_info\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"total_user_voted\": {\n        \"$size\": \"$vote_info\"\n      }\n    }\n  },\n  {\n    \"$addFields\": {\n      \"vote_info\": {\n        \"$map\": {\n          \"input\": \"$vote_info\",\n          \"as\": \"vote\",\n          \"in\": {\n            \"$mergeObjects\": [\n              \"$$vote\",\n              {\n                \"_id\": {\n                  \"$toString\": \"$$vote._id\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  },\n{\n  \"$addFields\": {\n    \"answers\": {\n      \"$map\": {\n        \"input\": \"$answers\",\n        \"as\": \"answer\",\n        \"in\": {\n          \"$mergeObjects\": [\n            \"$$answer\",\n            {\n              \"total\": {\n                \"$size\": {\n                  \"$filter\": {\n                    \"input\": \"$vote_info\",\n                    \"as\": \"vote\",\n                    \"cond\": {\n                      \"$in\": [\"$$answer.id\", \"$$vote.answer\"]\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"user_voted_info\": {\n                \"$map\": {\n                  \"input\": {\n                    \"$filter\": {\n                      \"input\": { \"$ifNull\": [\"$vote_info\", []] },\n                      \"as\": \"user\",\n                      \"cond\": {\n                        \"$in\": [\"$$answer.id\", \"$$user.answer\"]\n                      }\n                    }\n                  },\n    \"as\": \"v\",\n    \"in\": {\n      \"$arrayElemAt\": [\"$$v.user\", 0]\n    }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n},\n  {\n    \"$lookup\": {\n      \"from\": \"mge-user-vote-result\",\n      \"localField\": \"_id\",\n      \"foreignField\": \"tweet_id\",\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"created_by\": \"@jwt:user.id\",\n            \"tenant_id\": \"@header:x-tenant-id\"\n          }\n        }\n      ],\n      \"as\": \"my_voted_info\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"voted\": {\n        \"$cond\": {\n          \"if\": {\n            \"$gt\": [\n              {\n                \"$size\": \"$my_voted_info\"\n              },\n              0\n            ]\n          },\n          \"then\": true,\n          \"else\": false\n        }\n      }\n    }\n  },\n  {\n    \"$addFields\": {\n      \"vote_info\": {\n        \"$cond\": {\n          \"if\": {\n            \"$eq\": [\"$type\", \"votes\"]\n          },\n          \"then\": \"$vote_info\",\n          \"else\": \"$$REMOVE\"\n        }\n      },\n      \"total_user_voted\": {\n        \"$cond\": {\n          \"if\": {\n            \"$eq\": [\"$type\", \"votes\"]\n          },\n          \"then\": \"$total_user_voted\",\n          \"else\": \"$$REMOVE\"\n        }\n      },\n      \"answers\": {\n        \"$cond\": {\n          \"if\": {\n            \"$eq\": [\"$type\", \"votes\"]\n          },\n          \"then\": \"$answers\",\n          \"else\": \"$$REMOVE\"\n        }\n      },\n      \"voted\": {\n        \"$cond\": {\n          \"if\": {\n            \"$eq\": [\"$type\", \"votes\"]\n          },\n          \"then\": \"$voted\",\n          \"else\": \"$$REMOVE\"\n        }\n      }\n    }\n  },\n  {\n    \"$lookup\": {\n      \"from\": \"mge-social-event-registration\",\n      \"localField\": \"id\",\n      \"foreignField\": \"tweet\",\n      \"pipeline\": [\n        {\n          \"$match\": {\n            \"user\": \"@jwt:user.id\",\n            \"tenant_id\": \"@header:x-tenant-id\"\n          }\n        }\n      ],\n      \"as\": \"event_registered\"\n    }\n  },\n  {\n    \"$addFields\": {\n      \"event_registered\": {\n        \"$cond\": {\n          \"if\": {\n            \"$gt\": [\n              {\n                \"$size\": \"$event_registered\"\n              },\n              0\n            ]\n          },\n          \"then\": true,\n          \"else\": false\n        }\n      }\n    }\n  },\n  {\n    \"$addFields\": {\n      \"event_registered\": {\n        \"$cond\": {\n          \"if\": {\n            \"$eq\": [\"$type\", \"event\"]\n          },\n          \"then\": \"$event_registered\",\n          \"else\": \"$$REMOVE\" // Xóa field nếu không phải vote\n        }\n      }\n    }\n  },\n  {\n    \"$match\": {\n      \"$expr\": {\n        \"$or\": [\n          {\n            \"$eq\": [\"@param:title\", null]\n          },\n          {\n            \"$regexMatch\": {\n              \"input\": \"$title\",\n              \"regex\": \"@param:title\",\n              \"options\": \"i\"\n            }\n          }\n        ]\n      }\n    }\n  },\n  {\n    \"$sort\": {\n      \"created_at\": -1\n    }\n  },\n  {\n    \"$facet\": {\n      \"meta_data\": [\n        {\n          \"$count\": \"count\"\n        },\n        {\n          \"$addFields\": {\n            \"skip\": \"@param:skip\",\n            \"limit\": \"@param:limit\"\n          }\n        }\n      ],\n      \"data\": [\n        {\n          \"$skip\": \"@param:skip\"\n        },\n        {\n          \"$limit\": \"@param:limit\"\n        }\n      ]\n    }\n  }\n]\n",
  "note": "Lấy danh sách bài viết của user (theo status được chọn trên param và all types), các group có thể lấy bài được. Api dành cho user muốn lấy ds tổng hợp các bài viết đã viết ở các group.",
  "method": "get-list",
  "locale": null,
  "locale_id": null,
  "tenant_id": "674028d2611a654e763a73e8",
  "documents": [],
  "body": null,
  "categories": [],
  "headers": [
    {
      "value": "user.id",
      "key": "user.id"
    },
    {
      "value": "x-tenant-id",
      "key": "x-tenant-id"
    }
  ],
  "params": [
    {
      "value": "user_id",
      "key": "user_id"
    },
    {
      "value": "status[]",
      "key": "status[]"
    },
    {
      "value": "type[]",
      "key": "type[]"
    },
    {
      "value": "skip",
      "key": "skip"
    },
    {
      "value": "limit",
      "key": "limit"
    },
    {
      "value": "tag[]",
      "key": "tag[]"
    },
    {
      "value": "title",
      "key": "title"
    }
  ],
  "cache_time": "",
  "restricted": [
    {
      "key": "cover",
      "value": "cover"
    },
    {
      "key": "title",
      "value": "title"
    },
    {
      "key": "slug",
      "value": "slug"
    },
    {
      "key": "description",
      "value": "description"
    },
    {
      "key": "type",
      "value": "type"
    },
    {
      "key": "status",
      "value": "status"
    },
    {
      "key": "_id",
      "value": "_id"
    },
    {
      "key": "created_by",
      "value": "created_by"
    },
    {
      "key": "updated_by",
      "value": "updated_by"
    },
    {
      "key": "created_at",
      "value": "created_at"
    },
    {
      "key": "updated_at",
      "value": "updated_at"
    }
  ],
  "id": "6764fab46e57acaf6815ae07",
  "postQueryAdvance": "",
  "preQueryAdvance": ""
}